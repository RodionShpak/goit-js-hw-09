{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzBC,YAAW,KACeC,KAAKC,SAAW,GAGlCJ,EAAQ,mBAAmBH,QAAeC,KAE1CG,EAAO,kBAAkBJ,QAAeC,KAE5CO,eAAiB,IAClBP,MAxCEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GAClBA,EAAEC,iBAEF,MAAMC,EAAWF,EAAEG,OAAOD,SACpBE,EAAcF,EAASG,OAAOC,MAC9BC,EAAaC,OAAON,EAASb,MAAMiB,OACnCG,EAAYD,OAAON,EAASQ,KAAKJ,OACvC,IAAIK,EAAmB,EACnBC,EAAkB,EAEtB,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAaS,GAAK,EAClCD,GAAmB,EAEnBD,EAAmBJ,EAAaE,EAAYI,EAE5C1B,EAAcyB,EAAiBD,GAC1BG,MAAKC,IACF9B,EAAA+B,OAAOC,QAAQF,MAElBG,OAAMC,IACHlC,EAAA+B,OAAOI,QAAQD","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n    e.preventDefault();\n\n    const elements = e.target.elements;\n    const amountValue = elements.amount.value;\n    const delayValue = Number(elements.delay.value);\n    const stepValue = Number(elements.step.value);\n    let delayStepCounter = 0;\n    let promisePosition = 0;\n\n    for (let i = 0; i < amountValue; i += 1) {\n        promisePosition += 1;\n\n        delayStepCounter = delayValue + stepValue * i;\n\n        createPromise(promisePosition, delayStepCounter)\n            .then(successMessage => {\n                Notify.success(successMessage);\n            })\n            .catch(rejectMessage => {\n                Notify.failure(rejectMessage);\n            });\n    }\n}\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            const shouldResolve = Math.random() > 0.3;\n\n            if (shouldResolve) {\n                resolve(`Fulfill promise ${position} in ${delay}`);\n            } else {\n                reject(`Reject promise ${position} in ${delay}`);\n            }\n            promiseCounter = 0;\n        }, delay);\n    });\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","promiseCounter","document","querySelector","addEventListener","e","preventDefault","elements","target","amountValue","amount","value","delayValue","Number","stepValue","step","delayStepCounter","promisePosition","i","then","successMessage","Notify","success","catch","rejectMessage","failure"],"version":3,"file":"03-promises.afa28ab9.js.map"}